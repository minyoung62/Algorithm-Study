# import math
# from collections import deque
# def solution(n, stations, w):
#     answer = 0
#     cur = 1
#     a = 0
#     stations = deque(stations)

#     while stations:

#         station = stations.popleft()

#         left_stations =  station - w 
#         answer  += math.ceil((left_stations - cur ) / (2 * w + 1) )
   
#         cur = station + w + 1
    
#         a += 1
#         print(cur)
#     answer += math.ceil((n - cur + 1) / (2 * w + 1))
#     return answer


# print(solution(11, [1], 1), 3)

import math
def solution(n, stations, w):
    answer = 0
    
    now = 1
    while now <= n:
        
        if len(stations) != 0:
            center = stations.pop(0)
        else:
            empty = n - now + 1
            answer += math.ceil(empty/(2*w+1))
            return answer
            
        l = center - w
        r = center + w
        
        if now >= l:
            now = r + 1
            continue
        empty = l - now
        answer += math.ceil(empty/(2*w+1))
        
        now = r + 1
        
    
    return answer