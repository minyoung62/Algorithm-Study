def inRange(x, y, n):
    return 0 <= x < n and 0 <= y < n

def canGo(x, y, n,a):
    return inRange(x, y, n) and a[x][y] == 0
def solution(n):

    answer = []
    dxs = [1, -1, 0]
    dys = [0, 1, -1]
    
    a = [[0] * n for _ in range(n)]
    
    x, y , move = 0, 0, 0
    
    cnt = 1
    a[x][y] = cnt
    num = (n*(n+1))//2
    while cnt < num:

        nx, ny = x + dxs[move], y + dys[move]
        
        if canGo(nx, ny, n,a):
            cnt += 1
            x, y = nx, ny
            a[x][y] = cnt
      
        else:
            move = (move + 1) % 3
    
    for i in range(n):
        x, y = i, 0
        for _ in range(n):
            if not inRange(x, y, n):
                break
            answer.append(a[x][y])
            x, y = x-1, y+1

    return answer