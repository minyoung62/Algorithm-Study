def solution(m, n, puddles):
    answer = 0

    dp = [
        [0] * m
        for _ in range(n)
    ]   

    table = [
        [1] * m
        for _ in range(n)
    ]
    INF = 1e9
    for pud in puddles:
        table[pud[1]-1][pud[0]-1] = INF

    dp[0][0] = 1
    for i in range(1, m):
        if table[0][i] == INF:
            for j in range(i, m):
                dp[0][j] = INF
            break
        dp[0][i] = table[0][i] 

    for i in range(1, n):
        if table[i][0] == INF:
       
            for j in range(i, n):
                dp[j][0] = INF
            break
        dp[i][0] = table[i][0] 



    for i in range(1, n):
        for j in range(1, m):
            if table[i][j] == INF:
                dp[i][j] = INF
                continue
            if dp[i-1][j] == INF and dp[i][j-1] == INF:
                dp[i][j] = 0
            elif dp[i-1][j] == INF:
                dp[i][j] = dp[i][j-1]
            elif dp[i][j-1] == INF: 
                dp[i][j] = dp[i-1][j]
            else:
                dp[i][j] = dp[i-1][j] + dp[i][j-1]
    
    answer = dp[-1][-1] % 1000000007
    return answer 
print(solution(4,3,[[1,2]]))